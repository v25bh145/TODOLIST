/**
 * Copyright 2019 H-UI [ @author Mac.Manon @email fastapp@139.com ]
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use
 * this file except in compliance with the License.  You may obtain a copy of the
 * License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed
 * under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations under the License.
 *
 */

<template>
    <text class="{{compShow}} {{compStyle}}" style="{{compHeight}}">{{text}}</text>
</template>

<style lang="less">
    @import '../../../styles/variables.less';

    .bg-info{
        background-color: @color-info;
    }
    .bg-warning{
        background-color: @color-warning;
    }
    .bg-danger{
        background-color: @color-danger;
    }
    .bg-success{
        background-color: @color-success;
    }

    text{
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        width: 100%;
        color:#ffffff;
        text-align: center;
    }

    .show{
        animation-name: show;
        animation-duration: 500ms;
    }

    .hide{
        animation-name: hide;
        animation-duration: 500ms;
    }

    @keyframes show {
        from {
            height: 0;
            opacity: 0;
        }
        to {
            height: 60px;
        }
    }

    @keyframes hide {
        from {
            height: 60px;
        }
        to {
            height: 0;
            opacity: 0;
        }
    }
</style>

<script>
  export default {
      data() {
          return {
              text: '',
              type: 'info',
              duration: 2,
              isShow: false
          }
      },
      computed: {
          compType() {
              var type = ''
              switch (this.type){
                  case 'warning':
                  case 'danger':
                  case 'success':
                      type = this.type
                      break
                  default:
                      type = 'info'
                      break
              }
              return type
          },
          compShow() {
              return this.text==='' ? '' : (this.isShow ? 'show' : 'hide')
          },
          compStyle() {
              return 'bg-' + this.compType
          },
          compHeight() {
              return this.text==='' ? 'height:0;' : (this.isShow ? 'height:60px;' : 'height:0;')
          }
      },
      showMessage(options) {
          const {text = '', type = 'info', duration = 2} = options;
          Object.assign(this._data, {
              ...options,
              text: text,
              type: type,
              duration: duration,
              isShow: true
          });

          setTimeout(() => {
              this.isShow = false
          }, this.duration * 1000);
      }
  }
</script>
