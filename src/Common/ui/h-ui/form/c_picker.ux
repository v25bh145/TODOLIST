/**
* Copyright 2019 H-UI [ @author Mac.Manon @email fastapp@139.com ]
* Licensed under the Apache License, Version 2.0 (the "License"); you may not use
* this file except in compliance with the License.  You may obtain a copy of the
* License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software distributed
* under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
* CONDITIONS OF ANY KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations under the License.
*
*/

<template>
    <div class="form-group" style="{{hStyle}}">
        <div class="{{formHorizontalType}} {{noBorder ? 'form-control-no-border' : ''}}">
            <div if="{{formLabelType === 'form-group-label-horizontal'}}"  style="width:35%;">
                <text if="{{compNotBlank && title!==''}}" class="red">* </text>
                <label if="{{title !== ''}}" target="input" class="form-group-label-horizontal {{validStyle}}">{{title}}：</label>
            </div>
            <div if="{{formLabelType === 'form-group-label-default'}}">
                <text if="{{compNotBlank && title!==''}}" class="red">* </text>
                <label if="{{title !== ''}}" target="input" class="form-group-label-default {{validStyle}}">{{title}}</label>
            </div>

            <div class="{{borderType}} picker" style="{{formHorizontalType==='form-group-horizontal' ? 'width:65%;' : ''}}" onclick="handleClick">
                <text if="{{compNotBlank && title===''}}" class="red">* </text>
                <text>{{compShowText}}</text>
                <picker id="{{id}}" show="false" type="multi-text" range="{{compData}}" selected="{{compSelected}}" value="{{compValue}}"
                        onchange="handleChange" oncancel="handleCancel"></picker>
            </div>
        </div>

        <div show="{{!!formError}}" class="form-error">
            <text class="icon danger">&#xe719;</text>
            <text style="padding-left: 8px;">{{formError}}</text>
        </div>
    </div>
</template>

<style lang="less">
    @import '../../../styles/form.less';

    @font-face {
        font-family: hui;
        src: url('https://h-ui.obs.cn-south-1.myhuaweicloud.com/font/hui.ttf');
    }

    .picker{
        padding: 12px;
    }
    .icon{
        font-family: hui;
        font-size: 33px;
    }
    .success{
        color: @color-success;
    }
    .warning{
        color: @color-warning;
    }
    .danger{
        color: @color-danger;
    }
    .red{
        color: @color-red;
    }
</style>

<script>
    export default {
        props: {
            id:{},
            params: {},
            title: {
                default: ''
            },
            value: {},
            data: {},
            formHorizontal: {
                default: false
            },
            noBorder: {
                default: false
            },
            notBlank: {
                default: ''
            },
            disabled:{
                default: false
            },
            valid: {
                default: ''
            },
            formError: {
                default: ''
            },
            hStyle:{
                default: ''
            }
        },

        data() {
            return {
                compData: this.data,
                compValue: this.value,
                compSelected: [],
                oldData: [],
                oldValue: [],
                oldSelected: [],
                compValid: this.valid,
                compInit: true
            }
        },

        onInit() {
            var arr = this.data
            for(var i=0;i<this.compValue.length;i++){
                var arr2 = arr[i]
                for(var j=0;j<arr2.length;j++){
                    if(this.compValue[i] === arr2[j]){
                        this.compSelected.push(j)
                    }
                }
            }

            this.oldData = this.compData
            this.oldValue = this.compValue
            this.oldSelected = this.compSelected
        },

        computed: {
            formHorizontalType() {
                return this.formHorizontal ? "form-group-horizontal" : "form-group-default"
            },
            formLabelType() {
                return this.formHorizontal ? "form-group-label-horizontal" : "form-group-label-default"
            },
            formControlType() {
                return this.formHorizontal ? "form-group-control-horizontal" : "form-group-control-default"
            },
            borderType() {
                return this.noBorder ? '' : 'form-control-border-default'
            },
            compNotBlank() {
                return (this.disabled || this.notBlank==='false') ? false : true
            },
            compShowText() {
                var value = ''
                for(var i=0;i<this.compValue.length;i++){
                    value += this.compValue[i]
                    if(i < this.compValue.length-1){
                        value += ' > '
                    }
                }
                return value
            },
            validStyle() {
                if (this.compValid === 'has-success') {
                    return "success"
                } else if (this.compValid === 'has-warning') {
                    return "warning"
                } else if (this.compValid === 'has-error') {
                    return "danger"
                } else {
                    return (this.compInit || this.valid === 'none') ? "" : "success"
                }
            }
        },

        handleClick() {
            if(!this.disabled) {
                // 记录改变前的值，用于取消时还原数据
                this.oldData = this.compData
                this.oldValue = this.compValue
                this.oldSelected = this.compSelected
                this.$element(this.id).show()
            }
        },

        handleChange (e) {
            this.compValid = ""
            this.formError = ""
            this.compInit = false

            this.compSelected = e.newSelected
            this.compValue = e.newValue

            this.$dispatch(this.id + '_dispatchEvt', {
                value: this.compValue
            })
            this.params[this.id] = this.compValue
        },

        handleCancel (e) {
            this.compData = this.oldData
            this.compValue = this.oldValue
            this.compSelected = this.oldSelected
        }
    }
</script>