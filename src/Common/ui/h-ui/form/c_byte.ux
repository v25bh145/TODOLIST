/**
* Copyright 2019 H-UI [ @author Mac.Manon @email fastapp@139.com ]
* Licensed under the Apache License, Version 2.0 (the "License"); you may not use
* this file except in compliance with the License.  You may obtain a copy of the
* License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software distributed
* under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
* CONDITIONS OF ANY KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations under the License.
*
*/

<import name="number" src="./c_number"></import>
<template>
    <number id="{{id}}" params="{{params}}" min="{{compMin}}" max="{{compMax}}"
              step-button="{{stepButton}}" step="{{step}}" width="{{width}}"
              type="{{compType}}" type-icon="{{compTypeIcon}}" no-border="{{noBorder}}" form-horizontal="{{formHorizontal}}"
              title="{{title}}" name="{{name}}" focus="{{focus}}" maxlength="{{maxlength}}" 
              value="{{compValue}}" align-right="{{alignRight}}" tip="{{compTip}}" 
              valid="{{valid}}" valid-icon="{{compValidIcon}}" pattern="{{compPattern}}" form-error="{{formError}}" h-style="{{hStyle}}">
    </number>
</template>

<script>
    export default {
        props: {
            id:{},
            params: {},
            ranger: {
                // 数字范围：all(正数+0+负数),positive(正数),negative(负数),not-positive(非正数:0+负数),not-negative(非负数:正数+0)
                default: 'not-negative'
            },
            min: {
                // 最小值 @Range(min=value,max=value)
                default: ''
            },
            max: {
                // 最大值 @Range(min=value,max=value)
                default: ''
            },
            stepButton: {
                // 递增、递减(按钮)
                default: false
            },
            step: {
                // 加减按钮点击一次的增减数量
                default: 1
            },
            width: {
                default: ''
            },
            typeIcon: {
                default: ''
            },
            noBorder: {
                default: false
            },
            formHorizontal: {
                default: false
            },
            title: {
                default: '数量'
            },
            name: {
                default: ''
            },
            focus: {
                default: false
            },
            maxlength: {
                default: 4
            },
            value: {
                default: ''
            },
            alignRight: {
                default: false
            },
            tip: {
                default: ''
            },
            valid: {
                default: ''
            },
            validIcon: {
                default: ''
            },
            formError: {
                default: ''
            },
            hStyle:{
                default: ''
            }
        },
        computed: {
            compType() {
                if(this.ranger==='positive' || this.ranger==='not-negative'){
                    return 'number'
                }else{
                    return 'text'
                }
            },
            compTypeIcon() {
                return this.stepButton ? '' : this.typeIcon
            },
            compMin() {
                switch (this.ranger) {
                    case 'positive':
                        return (this.min==='') ? '1' : (Number(this.min) < 1 ? '1' : this.min)
                    case 'all':
                    case 'negative':
                    case 'not-positive':
                        return (this.min==='') ? '-128' : (Number(this.min) < -128 ? '-128' : this.min)
                    case 'not-negative':
                    default:
                        return (this.min==='') ? '0' : (Number(this.min) < 0 ? '0' : this.min)
                }
            },
            compMax() {
                switch (this.ranger) {
                    case 'positive':
                    case 'all':
                    case 'not-negative':
                    default:
                        return (this.max==='') ? '127' : (Number(this.max) > 127 ? '127' : this.max)
                    case 'negative':
                        return (this.max==='') ? '-1' : (Number(this.max) > -1 ? '-1' : this.max)
                    case 'not-positive':
                        return (this.max==='') ? '0' : (Number(this.max) > 0 ? '0' : this.max)
                }
            },
            compPattern() {
                switch (this.ranger) {
                    case 'all':
                        // 整数
                        return '^-?\\d+$'
                    case 'positive':
                        // 验证非零的正整数
                        return '^\\+?[1-9][0-9]*$'
                    case 'not-negative':
                    default:
                        // 验证非负整数（正整数 + 0）
                        return '^\\d+$'
                    case 'negative':
                        // 验证非零的负整数
                        return '^\\-[1-9][0-9]*$'
                    case 'not-positive':
                        // 验证非正整数（负整数 + 0）
                        return '^((-\\d+)|(0+))$'
                }
            },
            compTip() {
                if(this.tip===''){
                    return '请输入介于 '+this.compMin + '~' + this.compMax+' 之间的整数'
                }else{
                    return this.tip
                }
            },
            compValue() {
                if(this.value===''){
                    switch (this.ranger) {
                        case 'all':
                            return '0'
                        case 'positive':
                            return '1'
                        case 'not-negative':
                        default:
                            return '0'
                        case 'negative':
                            return '-1'
                        case 'not-positive':
                            return '-1'               
                    }
                }else{
                    return this.value
                }
            },
            compValidIcon() {
                return this.validIcon==='none' ? false : (this.stepButton ? false : true)
            }
        }
    }
</script>