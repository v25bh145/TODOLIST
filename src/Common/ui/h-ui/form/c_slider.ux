/**
* Copyright 2019 H-UI [ @author Mac.Manon @email fastapp@139.com ]
* Licensed under the Apache License, Version 2.0 (the "License"); you may not use
* this file except in compliance with the License.  You may obtain a copy of the
* License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software distributed
* under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
* CONDITIONS OF ANY KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations under the License.
*
*/

<template>
    <div class="form-group" style="{{hStyle}}">
        <div class="{{formHorizontalType}} {{noBorder ? 'form-control-no-border' : ''}}">
            <block if="{{formLabelType === 'form-group-label-horizontal'}}">
                <text if="{{compNotBlank && compTitle!==''}}" class="red">* </text>
                <text class="form-group-label-horizontal {{validStyle}}"  style="width:35%;">{{compTitle}}：</text>
            </block>
            <block if="{{formLabelType === 'form-group-label-default'}}">
                <div>
                    <text if="{{compNotBlank && compTitle!==''}}" class="red">* </text>
                    <text class="form-group-label-default {{validStyle}}">{{compTitle}}</text>
                </div>
            </block>

            <div class="{{compAlign}}" style="{{formHorizontalType==='form-group-horizontal' ? 'width:65%;' : ''}}">
                <div class="slider">
                    <slider id="{{id}}" class="slider-bar {{type}}" min="{{min}}" max="{{max}}" value="{{compValue}}" step="{{step}}" disabled="{{disabled}}" onchange="getValue('compValue')"></slider>
                    <text>{{compValue}}</text>
                </div>
            </div>
        </div>

        <div show="{{!!formError}}" class="form-error">
            <text class="icon danger">&#xe719;</text>
            <text style="padding-left: 8px;">{{formError}}</text>
        </div>
    </div>
</template>

<style lang="less">
    @import '../../../styles/form.less';

    @font-face {
        font-family: hui;
        src: url('https://h-ui.obs.cn-south-1.myhuaweicloud.com/font/hui.ttf');
    }

    .icon{
        font-family: hui;
        font-size: 33px;
    }
    .slider{
        width: 684px;
        margin: 10px 0;
        align-items: center;
        justify-content: space-between;
        &-bar{
             flex: 1;
             width:500px;
             margin: 0 5px;
         }
    }
    .align-right{
        justify-content: flex-end;
    }
    .default{
        selected-color: @color-black;
        block-color: @color-black;
    }
    .primary{
        selected-color: @color-primary;
        block-color: @color-primary;
    }
    .info{
        selected-color: @color-info;
        block-color: @color-info;
    }
    .warning{
        selected-color: @color-warning;
        block-color: @color-warning;
    }
    .danger{
        selected-color: @color-danger;
        block-color: @color-danger;
    }
    .success{
        selected-color: @color-success;
        block-color: @color-success;
    }

    .success-title{
        color: @color-success;
    }
    .warning-title{
        color: @color-warning;
    }
    .danger-title{
        color: @color-danger;
    }
    .danger-icon{
        color: @color-danger;
    }
    .red{
        color: @color-red;
    }
</style>

<script>
    export default {
        props: {
            id:{},
            params: {},
            title: {
                default: '数量'
            },
            formHorizontal: {
                default: false
            },
            noBorder: {
                default: false
            },
            notBlank: {
                default: ''
            },
            disabled:{
                default: false
            },
            min:{
                default: 0
            },
            max:{
                default: 100
            },
            step:{
                default: 1
            },
            value:{
                default: 0
            },
            type:{
                default: 'info'
            },
            valid: {
                default: ''
            },
            formError: {
                default: ''
            },
            hStyle:{
                default: ''
            }
        },

        data() {
            return {
                compValue: this.value,
                compValid: this.valid,
                compInit: true
            }
        },

        computed: {
            formHorizontalType() {
                return this.formHorizontal ? "form-group-horizontal" : "form-group-default"
            },
            formLabelType() {
                return this.formHorizontal ? "form-group-label-horizontal" : "form-group-label-default"
            },
            formControlType() {
                return this.formHorizontal ? "form-group-control-horizontal" : "form-group-control-default"
            },
            borderType() {
                return this.noBorder ? '' : 'form-control-border-default'
            },
            compTitle() {
                return this.title==='none' ? "" : this.title
            },
            compNotBlank() {
                return (this.disabled || this.notBlank==='false') ? false : true
            },
            validStyle() {
                if (this.compValid === 'has-success') {
                    return "success-title"
                } else if (this.compValid === 'has-warning') {
                    return "warning-title"
                } else if (this.compValid === 'has-error') {
                    return "danger-title"
                } else {
                    return (this.compInit || this.disabled || this.valid === 'none') ? "" : "success-title"
                }
            }
        },

        getValue (name, evt) {
            this.compInit = false
            this.compValid = ""
            this.formError = ""
            this[name] = evt.progress
            this.$dispatch(this.id + '_dispatchEvt', {
                value: this.compValue
            })
            this.params[this.id] = this.compValue
        }
    }
</script>