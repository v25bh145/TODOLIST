/**
* Copyright 2019 H-UI [ @author Mac.Manon @email fastapp@139.com ]
* Licensed under the Apache License, Version 2.0 (the "License"); you may not use
* this file except in compliance with the License.  You may obtain a copy of the
* License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software distributed
* under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
* CONDITIONS OF ANY KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations under the License.
*
*/

<import name="toast" src="../feedback/c_toast"></import>
<template>
    <div>
        <text id="{{id}}" class="icon {{color}}" style="{{compSize}}" onclick="handleClick">&#xe747;</text>
        <toast id="toast"></toast>
    </div>
</template>

<style lang="less">
    @import '../../../styles/color.less';

    @font-face {
        font-family: hui;
        src: url('https://h-ui.obs.cn-south-1.myhuaweicloud.com/font/hui.ttf');
    }

    .icon {
        font-family: hui;
    }
</style>

<script>
    import ai from '@system.ai'
    export default {
        props: {
            id: {},
            size: {
                default: 55
            },
            color: {
                default: 'sub'
            }
        },
        computed: {
            compSize() {
                return 'font-size: ' + this.size + ';'
            }
        },
        handleClick() {
            let _this = this
            ai.canIUse({
                success: function (data) {
                    if(data.canUse){
                        _this.$child('toast').showToast({
                            text: '您的设备支持AI',
                            icon: 'ok'
                        })
                    }else{
                        _this.$child('toast').showToast({
                            text: '您的设备不支持AI',
                            icon: 'warning'
                        })
                    }

                    _this.$dispatch(_this.id + '_dispatchEvt', {
                        value: data.canUse
                    })
                },
                fail: function (data, code) {
                    console.log("handling fail, code: " + code)
                },
                complete: function () {
                    console.log("handling complete")
                }
            })
        }
    }
</script>
