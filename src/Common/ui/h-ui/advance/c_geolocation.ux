/**
* Copyright 2019 H-UI [ @author Mac.Manon @email fastapp@139.com ]
* Licensed under the Apache License, Version 2.0 (the "License"); you may not use
* this file except in compliance with the License.  You may obtain a copy of the
* License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software distributed
* under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
* CONDITIONS OF ANY KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations under the License.
*
*/

<template>
    <div class="geolocation" style="{{hStyle}}">
        <div class="geolocation-title" onclick="handleClick">
            <text class="icon">&#xe852;</text>
            <div if="{{value === ''}}">
                <progress class="geolocation-title-circular" type="circular"></progress>
                <text>正在获取位置...</text>
            </div>
            <text if="{{value !== ''}}">
                <span>{{value}}</span>
                <span if="{{!compShowPanel}}" class="icon icon-margin">&#xe70b;</span>
                <span if="{{compShowPanel}}" class="icon icon-margin">&#xe70f;</span>
            </text>
        </div>
        <map if="{{compShowPanel}}" class="geolocation-panel" longitude="{{longitude}}" latitude="{{latitude}}" scale="15"></map>
    </div>
</template>

<style lang="less">
    @font-face {
        font-family: hui;
        src: url('https://h-ui.obs.cn-south-1.myhuaweicloud.com/font/hui.ttf');
    }

    .icon {
        font-family: hui;
        margin-top: 8px;
        &-margin{
            margin-left: 10px;
        }
    }
    .geolocation{
        flex-direction: column;
        &-title{
            align-items: flex-start;
             &-circular{
                 width: 40px;
                 height: 40px;
             }
        }
        &-panel{
            width: 100%;
            height: 684px;
            margin-top: 20px;
        }
    }
</style>

<script>
    import fetch from '@system.fetch'
    import geolocation from '@system.geolocation'
    import { amapConfig } from '../../../utils/config'

    export default {
        props: {
            id: {},
            location: {
                default: ''
            },
            hStyle:{
                default: ''
            }
        },

        data: {
            value: '',
            compShowPanel: false,
            longitude: 0,
            latitude: 0,
            params: {}
        },

        onInit() {
            let _this = this

            if(_this.location !== ''){
                var arr = _this.location.split(',')
                _this.longitude = Number(arr[0])
                _this.latitude =  Number(arr[1])

                _this.params.location = _this.longitude + ',' + _this.latitude
                _this.params.key = amapConfig.key
                _this.submit()
            }else{
                geolocation.getLocation({
                    success: function (data) {
                        _this.longitude = data.longitude
                        _this.latitude = data.latitude

                        _this.params.location = _this.longitude + ',' + _this.latitude
                        _this.params.key = amapConfig.key
                        _this.submit()
                    },
                    fail: function (data, code) {
                        console.log(`handling fail, code = ${code}`)
                    }
                })
            }
        },

        async submit () {
            try {
                const response = await fetch.fetch({
                    url: 'https://restapi.amap.com/v3/geocode/regeo',
                    data: this.params,
                    header: {'Content-Type': 'application/json'},
                    method: 'GET',
                    responseType: 'json'
                })

                const addressComponent = response.data.data.regeocode.addressComponent

                this.value = addressComponent.province
                this.value += '>' + addressComponent.city
                this.value += '>' + addressComponent.district
                this.value += '>' + addressComponent.township

                var address = addressComponent.streetNumber.street + addressComponent.streetNumber.number
                this.value += (address !== '') ? '>' : ''
                this.value += address

                var item = {
                    longitude: this.longitude,
                    latitude: this.latitude,
                    address: addressComponent,
                    addressText: this.value
                }
                this.$dispatch(this.id + '_dispatchEvt', {
                    value: item
                })
            } catch(err) {
                console.info(JSON.stringify(err))
            }
        },

        handleClick() {
            this.compShowPanel = !this.compShowPanel
        }
    }
</script>
